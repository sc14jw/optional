// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package optional

// TestOptional provides information for an TestOptional type such as whether or not a given value was initialised given a some constraits.
type TestOptional struct {
	value       *Test
	initialised bool
}

// WasInitialised returns whether or not a given TestOptional contains a value that was initialised given the TestOptional's constraits.
func (opt *TestOptional) WasInitialised() bool {
	return opt.initialised
}

// GetValue returns the value of given TestOptional as a new value.
func (opt *TestOptional) GetValue() *Test {
	return opt.value
}

// NotNilTest returns an TestOptional stating the given value should not be nil.
func NotNilTest(value *Test) *TestOptional {
	if value == nil {
		return &TestOptional{value: nil, initialised: false}
	}

	return &TestOptional{value: value, initialised: true}
}

// WithDefaultTestValue alter a created TestOptional to have a default value to be set should it not be initialised
func WithDefaultTestValue(opt *TestOptional, def *Test) *TestOptional {
	if !opt.WasInitialised() {
		opt.value = def
		return opt
	}

	return opt
}
